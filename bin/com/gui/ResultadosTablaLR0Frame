package com.gui;

import com.lr0.LR0Table;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;
import java.util.Map;

public class ResultadosTablaLR0Frame extends JFrame {
    private final JTable tblAccion = new JTable();
    private final JTable tblGoto   = new JTable();

    public ResultadosTablaLR0Frame(LR0Table.Result r) {
        super("Tabla de Análisis Sintáctico LR(0)");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(1000, 600);

        JSplitPane split = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);
        split.setResizeWeight(0.65);

        tblAccion.setModel(toActionModel(r.states, r.terminals, r.action));
        tblGoto.setModel(toGotoModel(r.states, r.nonTerminals, r.gotoTable));

        split.setLeftComponent(new JScrollPane(tblAccion));
        split.setRightComponent(new JScrollPane(tblGoto));
        getContentPane().add(split, BorderLayout.CENTER);
    }

    private DefaultTableModel toActionModel(int nStates, List<String> terminals,
                                            Map<Integer, Map<String, String>> action) {
        String[] cols = new String[terminals.size() + 1];
        cols[0] = "Edo";
        for (int i = 0; i < terminals.size(); i++) cols[i+1] = terminals.get(i);

        Object[][] data = new Object[nStates][cols.length];
        for (int i = 0; i < nStates; i++) {
            data[i][0] = i;
            for (int j = 0; j < terminals.size(); j++) {
                String a = terminals.get(j);
                String v = action.getOrDefault(i, Map.of()).get(a);
                data[i][j+1] = v == null ? "" : v;
            }
        }
        return new DefaultTableModel(data, cols) { @Override public boolean isCellEditable(int r,int c){ return false; } };
    }

    private DefaultTableModel toGotoModel(int nStates, List<String> nonTerminals,
                                          Map<Integer, Map<String, Integer>> goTo) {
        String[] cols = new String[nonTerminals.size() + 1];
        cols[0] = "Edo";
        for (int i = 0; i < nonTerminals.size(); i++) cols[i+1] = nonTerminals.get(i);

        Object[][] data = new Object[nStates][cols.length];
        for (int i = 0; i < nStates; i++) {
            data[i][0] = i;
            for (int j = 0; j < nonTerminals.size(); j++) {
                String A = nonTerminals.get(j);
                Integer v = goTo.getOrDefault(i, Map.of()).get(A);
                data[i][j+1] = v == null ? "" : v;
            }
        }
        return new DefaultTableModel(data, cols) { @Override public boolean isCellEditable(int r,int c){ return false; } };
    }
}
